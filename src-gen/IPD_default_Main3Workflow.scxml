<?xml version="1.0" encoding="utf-8"?>
<scxml version="1.0" xmlns="http://www.w3.org/2005/07/scxml" 
		xmlns:xi="http://www.w3.org/2001/XInclude"
		xmlns:ws="http://www.genesyslab.com/modules/ws"
		xmlns:queue="http://www.genesyslab.com/modules/queue"
		xmlns:dialog="http://www.genesyslab.com/modules/dialog"
		xmlns:session="http://www.genesyslab.com/modules/session"
		xmlns:ixn="http://www.genesyslab.com/modules/interaction"
		xmlns:classification="http://www.genesyslab.com/modules/classification"
		initial="_composer_globalstate"  
		profile="ecmascript"
		_persist="false"
		name="default.Main3Workflow">

	<script><xi:include href="../include/common.js" parse="text"/></script>
	<script><xi:include href="../include/DataAccess.js" parse="text"/></script>    
	<script><xi:include href="../include/RouteFeature.js" parse="text"/></script>
	<script><xi:include href="../include/IrdEnumMapper.js" parse="text"/></script>
	<script><xi:include href="../include/StringManipulation.js" parse="text"/></script>
	<script><xi:include href="../include/DateTime.js" parse="text"/></script>
	<script><xi:include href="../include/ListManipulation.js" parse="text"/></script>
	<script><xi:include href="../include/MiscIRDFunctions.js" parse="text"/></script>
	<script><xi:include href="../include/user/Api.js" parse="text"/></script>
	<script><xi:include href="../include/user/CustomDateTime.js" parse="text"/></script>
	<script><xi:include href="../include/user/Global.js" parse="text"/></script>
	<script><xi:include href="../include/user/ReadConfig.js" parse="text"/></script>
	<script><xi:include href="../include/user/Util.js" parse="text"/></script>
	
	
	<!-- SCXML code generated by Composer 8.1.541.07 -->
	<!-- Diagram created/upgraded by Composer: Composer 8.1.541.07 -->
	<!-- Project version: 8.1.541.07 -->
	<!-- Diagram version: 1.0 CreatedOn:  -->
	<!-- Application Author:  -->

	<state id="_composer_globalstate" initial="_composer_parallel">
		<datamodel>
			<data id="system" expr="new Object()"/>
			<data id="context_management_services_url"/>
			<data id="context_management_services_username"/>
			<data id="context_management_services_password"/>
			<data id="cs_services_url"/>
			<data id="cs_services_username"/>
			<data id="cs_services_password"/>
			<data id="cs_ccid"/>
			<data id="ors_url"/>
			<data id="grat_server" />
			<data id="grat_username" />
			<data id="grat_password" />
			<data id="grat_tenant" />
			<data id="start_workflow_onrouterequest" expr="false"/>
			<data id="cdpApiBaseURL"/>
			<data id="cdpAppKey"/>
			<data id="cdpCallJourney"/>
			<data id="cdpEndCallSurveyURL"/>
			<data id="cdpGetDetailByPhone"/>
			<data id="cdpSignin"/>
			<data id="cdpSignoff"/>
			<data id="defaultLanguage"/>
			<data id="defaultMusic"/>
			<data id="defaultMusicTimeout"/>
			<data id="defaultPriority"/>
			<data id="defaultSectionName"/>
			<data id="defaultTargetInfiniteTimeout"/>
			<data id="defaultTargetTimeout"/>
			<data id="gaxAnncPath"/>
			<data id="gaxARBaseURL"/>
			<data id="gaxMusicPath"/>
			<data id="globalListInfo"/>
			<data id="globalListName"/>
			<data id="gnsEndCAllSurveyURL"/>
			<data id="gvpEndCallSurveyURL"/>
			<data id="gvpIVRProfileMap"/>
			<data id="holiday"/>
			<data id="kvlist"/>
			<data id="personality"/>
			<data id="routeBusyAnnc1"/>
			<data id="routeBusyAnnc2"/>
			<data id="routeEntryId1"/>
			<data id="routeEntryId2"/>
			<data id="routeMaxErr"/>
			<data id="routeNoInput"/>
			<data id="routeNoMatch"/>
			<data id="routePreXfer"/>
			<data id="rpInfo"/>
			<data id="rpPGName"/>
			<data id="rpVQName"/>
			<data id="defaultSwitch"/>
			<data id="defaultStatServer"/>
			<data id="gvpRoutingTable"/>
		</datamodel>
		<parallel id="_composer_parallel">
			<onentry>
				<script>
 					if (typeof _data.cdpApiBaseURL == "undefined") _data.cdpApiBaseURL = 'https://wizdemo-api.wiz-solution.com';
 					if (typeof _data.cdpAppKey == "undefined") _data.cdpAppKey = '608608ed442341e78183358ace86971d';
 					if (typeof _data.cdpCallJourney == "undefined") _data.cdpCallJourney = '/v1/apienpoint/genesys/callJournal';
 					if (typeof _data.cdpEndCallSurveyURL == "undefined") _data.cdpEndCallSurveyURL = 'https://wizdemo-api.wiz-solution.com/v1/apienpoint/genesys/submitivrsurvey';
 					if (typeof _data.cdpGetDetailByPhone == "undefined") _data.cdpGetDetailByPhone = '/v1/apienpoint/genesys/getDetailByPhoneKey';
 					if (typeof _data.cdpSignin == "undefined") _data.cdpSignin = '/auth/genesys/signin';
 					if (typeof _data.cdpSignoff == "undefined") _data.cdpSignoff = '/auth/genesys/signout';
 					if (typeof _data.defaultLanguage == "undefined") _data.defaultLanguage = 'th-TH';
 					if (typeof _data.defaultMusic == "undefined") _data.defaultMusic = 'music';
 					if (typeof _data.defaultMusicTimeout == "undefined") _data.defaultMusicTimeout = 30;
 					if (typeof _data.defaultPriority == "undefined") _data.defaultPriority = 1;
 					if (typeof _data.defaultSectionName == "undefined") _data.defaultSectionName = 'OPM';
 					if (typeof _data.defaultTargetInfiniteTimeout == "undefined") _data.defaultTargetInfiniteTimeout = 99999;
 					if (typeof _data.defaultTargetTimeout == "undefined") _data.defaultTargetTimeout = 30;
 					if (typeof _data.gaxAnncPath == "undefined") _data.gaxAnncPath = 'annc';
 					if (typeof _data.gaxARBaseURL == "undefined") _data.gaxARBaseURL = 'http://192.168.2.161/arm';
 					if (typeof _data.gaxMusicPath == "undefined") _data.gaxMusicPath = 'audio';
 					if (typeof _data.globalListInfo == "undefined") _data.globalListInfo = undefined;
 					if (typeof _data.globalListName == "undefined") _data.globalListName = undefined;
 					if (typeof _data.gnsEndCAllSurveyURL == "undefined") _data.gnsEndCAllSurveyURL = undefined;
 					if (typeof _data.gvpEndCallSurveyURL == "undefined") _data.gvpEndCallSurveyURL = undefined;
 					if (typeof _data.gvpIVRProfileMap == "undefined") _data.gvpIVRProfileMap = undefined;
 					if (typeof _data.holiday == "undefined") _data.holiday = undefined;
 					if (typeof _data.kvlist == "undefined") _data.kvlist = undefined;
 					if (typeof _data.personality == "undefined") _data.personality = undefined;
 					if (typeof _data.routeBusyAnnc1 == "undefined") _data.routeBusyAnnc1 = undefined;
 					if (typeof _data.routeBusyAnnc2 == "undefined") _data.routeBusyAnnc2 = undefined;
 					if (typeof _data.routeEntryId1 == "undefined") _data.routeEntryId1 = undefined;
 					if (typeof _data.routeEntryId2 == "undefined") _data.routeEntryId2 = undefined;
 					if (typeof _data.routeMaxErr == "undefined") _data.routeMaxErr = undefined;
 					if (typeof _data.routeNoInput == "undefined") _data.routeNoInput = undefined;
 					if (typeof _data.routeNoMatch == "undefined") _data.routeNoMatch = undefined;
 					if (typeof _data.routePreXfer == "undefined") _data.routePreXfer = undefined;
 					if (typeof _data.rpInfo == "undefined") _data.rpInfo = undefined;
 					if (typeof _data.rpPGName == "undefined") _data.rpPGName = undefined;
 					if (typeof _data.rpVQName == "undefined") _data.rpVQName = undefined;
 					if (typeof _data.defaultSwitch == "undefined") _data.defaultSwitch = undefined;
 					if (typeof _data.defaultStatServer == "undefined") _data.defaultStatServer = undefined;
 					if (typeof _data.gvpRoutingTable == "undefined") _data.gvpRoutingTable = undefined;
					<!-- Global Variables declarations -->
					var system = new Object();
					system.SessionID = undefined;
					system.uncaughtApplicationEvents = [];
					_data.system.context = system;
					<!-- Deprecated variables START -->
					<!-- Do not use them in your diagrams -->
					var App_Name = 'Main3Workflow';
					var App_BaseURL = getBaseURL();
					var App_RelativePathURL = getRelativePathURL();
					var InteractionID;
					var CallID;
					var DNIS;
					var ThisDN;
					var ANI;
					var TenantID;
					var Tenant_Name;
					var App_Last_Error_Event;
					var App_Last_Error_Event_Name;
					var App_Last_Error_Description;
					var App_StartEvent;
					<!-- Deprecated variables END -->
				</script>
				<log expr="'RelativePathURL = ' + getRelativePathURL()" />
			</onentry>

			<!-- User application leg -->
			<state id="_composer_application" initial="_composer_init">
				<!-- Initial state of the application leg, just wait for the application.start event -->
				<state id="_composer_init">
					<onentry>
						<log expr="'Application default.Main3Workflow initialized.'"/>
						<log expr="'Code Generated by Composer: 8.1.541.07.'"/>
						<log expr="'Diagram created/upgraded by Composer: Composer 8.1.541.07.'"/>
						<log expr="'Project version: 8.1.541.07.'"/>
						<log expr="'Diagram version: 1.0 CreatedOn: .'"/>
					</onentry>
					<transition event="application.start" target="_composer_start"/>
				</state>
				<!-- Start state of the application leg, the application.start event is caught,
					the workflow SCXML can now be run-->
				<state id="_composer_start" initial="Main3Workflow">
					<onentry>
						<script>
							setSystemVarsForEffectiveIxnId(system);
							<!-- Deprecated variables START -->
							<!-- Do not use them in your diagrams -->
							TenantID = system.TenantID;
							Tenant_Name = system.TenantName;
							CallID = system.CallID;
							DNIS = system.DNIS;
							ANI = system.ANI;
							<!-- Deprecated variables END -->
						</script>
						<if cond="typeof system.InteractionID != 'undefined'">
							<log expr="system.Type + ' Interaction ' + system.InteractionID + ' processing'"/>
						<else/>
							<log expr="'Interaction less processing'"/>
						</if>
					</onentry>
					<state id="Main3Workflow" initial="Main3Workflow._composer_entry">
						<!-- include workflow scxml -->
						<xi:include href="Main3.scxml" parse="xml" resolveid="Main3Workflow" xpointer="_composer_entry" />
						<transition event="done.state.Main3Workflow._composer_entry" target="_composer_global_exit" />
					</state>
				</state>

				<!-- application.exit is caught, that means it was not caught by the underlying workflow SCXML,
				so we fall back on default behavior which is to stop the application (and the session) -->
				<transition event="application.exit" target="_composer_global_exit"/>

				<!-- store uncaught application events. those events might be processed by the system handler. -->
				<transition event="*">
					<log expr="_event.name + ' event received in user application thread ' + _event.toSource()"/>
					<script>storeUnhandledEvent();</script>
				</transition>
			</state>

			<!-- Event Handler leg -->
			<state id="_composer_event_handler">
				<onentry>
					<log expr="'Waiting for events'"/>
				</onentry>
				<!-- The Event Handler leg catches and processes 'system' events (by default) & any user defined event.
				When an event is received, it never transitions out to a target state.
				So this state remains active until the user application leg is finished. -->
				<transition event="error.notallowed" cond="_data.keepGVPSessionAlive==true">
					<log expr="'Received error.notallowed event in IPD. Ignoring the error.notallowed event'"></log>
				</transition>
				<transition event="interaction.added" cond="typeof system.SessionID == 'undefined'">
<log expr="_sessionid + ': interaction.added received in IPD event handler for interaction ' + _event.data.interactionid"/>
<assign location="system.SessionID" expr="_sessionid"/>
<assign location="system.StartEvent" expr="_event"/>
<assign location="App_StartEvent" expr="system.StartEvent"/>
<script>initializeRoutingSystemVariables();</script>
<assign location="InteractionID" expr="system.InteractionID"/>
<if cond="typeof _genesys.ixn.interactions[_event.data.interactionid] != 'undefined'
			&amp;&amp; typeof _genesys.ixn.interactions[_event.data.interactionid].voice != 'undefined'
			&amp;&amp; _genesys.ixn.interactions[_event.data.interactionid].voice.type == 'consult'
         &amp;&amp; typeof _genesys.ixn.interactions[_event.data.interactionid].parentid!='undefined'
         &amp;&amp; _genesys.ixn.interactions[_event.data.interactionid].parentid!=''">
	<!-- Consult call started strategy. Attaching primary call...-->
	<log expr="_sessionid + ': attaching parent interaction'"/>
	<ixn:attach requestid="system.RequestID" interactionid="_genesys.ixn.interactions[_event.data.interactionid].parentid"/>
<else/>
	<!-- Normal call started strategy. Proceeding with session ...-->
	<log expr="_sessionid + ': processing interaction ' + _event.data.interactionid"/>
	<if cond="_data.start_workflow_onrouterequest==false">
	<log expr="_sessionid + ': interaction.added event starting the worklfow application'"/>
	<raise event="application.start">
		<param name="interactionid" expr="_event.data.interactionid"/>
	</raise>
</if></if>
				</transition>
				<transition event="interaction.attach.done" cond="_event.data.requestid == system.RequestID">
<log expr="_sessionid + ': interaction.attach.done received in IPD event handler for interaction ' + _event.data.interactionid"/>
<!-- Processing primary call ...-->
<log expr="_sessionid + ': processing primary interaction ' + _event.data.interactionid"/>
	<if cond="_data.start_workflow_onrouterequest==false">
	<log expr="_sessionid + ': interaction.attach.done event starting the worklfow application'"/>
		<send event="'application.start'" delay="'1s'">
			<param name="interactionid" expr="(typeof system.StartEvent != 'undefined' &amp;&amp; typeof system.StartEvent.data != 'undefined') ? system.StartEvent.data.interactionid : undefined"/>
		</send>	</if>
				</transition>
				<transition event="interaction.onrouterequest" cond="typeof system.SessionID != 'undefined'">
<log expr="_sessionid + ': interaction.onrouterequest received in IPD event handler for interaction ' + _event.data.interactionid"/>
	<log expr="_sessionid + ': processing interaction ' + _event.data.interactionid"/>
<if cond="_data.start_workflow_onrouterequest==true">
	<log expr="_sessionid + ': interaction.onrouterequest event starting the worklfow application'"/>
	<raise event="application.start">
		<param name="interactionid" expr="_event.data.interactionid"/>
	</raise>
	</if>

				</transition>
				<transition event="interaction.onmerge" cond="system.Type == 'consult' &amp;&amp; _event.data.frominteractionid == _data.system.context.InteractionID &amp;&amp; _event.data.tointeractionid == _data.system.context.ParentInteractionID">
<log expr="_sessionid + ': interaction.onmerge received in IPD event handler from ' + _event.data.frominteractionid + ' to ' + _event.data.tointeractionid"/>
<assign location="_data.system.context.InteractionID" expr="_data.system.context.ParentInteractionID"/>
<assign location="_data.system.context.ParentInteractionID" expr="undefined"/>
				</transition>
				<transition event="interaction.deleted" cond="_event.data.interactionid == _data.system.context.InteractionID &amp;&amp; (!_event.data.resultof || _event.data.resultof == 'deletion')">
<if cond="!isEventHandledByApplication()">
	<log expr="_sessionid + ': interaction.deleted (effective interaction) received in IPD event handler for interaction ' + _event.data.interactionid"/>
	<raise event="application.exit">
		<param name="interactionid" expr="_event.data.interactionid"/>
		<param name="reason" expr="'current interaction deleted'"/>
	</raise>
</if>
				</transition>
				<transition event="interaction.deleted" cond="_event.data.interactionid == _data.system.context.InitialInteractionID &amp;&amp; (!_event.data.resultof || _event.data.resultof == 'deletion') &amp;&amp; system.Type != 'consult' ">
<if cond="!isEventHandledByApplication()">
	<log expr="_sessionid + ': interaction.deleted (initial interaction) received in IPD event handler for interaction ' + _event.data.interactionid"/>
	<raise event="application.exit">
		<param name="interactionid" expr="_event.data.interactionid"/>
		<param name="reason" expr="'initial interaction deleted'"/>
	</raise>
</if>
				</transition>
				<transition event="interaction.partystatechanged" cond="_event.data.interactionid == _data.system.context.InteractionID">
<log expr="_sessionid + ': interaction.partystatechanged received in IPD event handler for interaction ' + _event.data.interactionid"/>
<script>if (typeof _data.system.context.InteractionID != 'undefined' &amp;&amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined'
               &amp;&amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID].voice != 'undefined' )
        { 
            if ( typeof _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties != 'undefined' )
            {
                var thisParty = '';
                for ( var party in _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties )
                {
                    thisParty = _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties[ party ];
                    if ( thisParty.device != null &amp;&amp; thisParty.device == _event.data.focusdeviceid )
                    {
                        if ( typeof thisParty.devicetype != 'undefined' &amp;&amp; (thisParty.devicetype == 'routepoint' || thisParty.devicetype == 'queue') &amp;&amp; thisParty.devicetype != 'agent' &amp;&amp; thisParty.devicetype != 'unknown')
                       {
                          _data.system.context.ThisDN = _event.data.focusdeviceid;
                       }
                    }
               }
           }
}
else if(typeof _data.system.context.InteractionID != 'undefined' &amp;&amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined'){
	 _data.system.context.ThisDN = _event.data.focusdeviceid;
}
</script>
				</transition>
				<transition event="error">
<if cond="!isEventHandledByApplication()">
	<log expr="_sessionid + ': unexpected error received in IPD event handler ' + _event.toSource()"/>
	<if cond="typeof _event != 'undefined' &amp;&amp; typeof _event.data != 'undefined' &amp;&amp; typeof _event.data.description != 'undefined'">
		<log expr="_sessionid + ': Error message: ' + _event.data.description" />
	</if>
	<script>
		<![CDATA[
		var autostop = (typeof _data.system.context.InteractionID != 'undefined')
						&& (typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined')
						&& (typeof _genesys.ixn.interactions[_data.system.context.InteractionID].voice == 'undefined')
						&& (_data.system.context.TerminateIxnOnExit == '1' || _data.system.context.TerminateIxnOnExit == 1);
		]]>
	</script>
	<if cond="autostop">
		<ixn:terminate interactionid="_data.system.context.InteractionID" reason="'Auto-stop interaction'"/>
	</if>
	<raise event="application.exit">
		<param name="interactionid" expr="_data.system.context.InteractionID"/>
	</raise>
</if>
				</transition>
			</state>
		</parallel>
	</state>

	<!-- Global Exit state -->
	<final id="_composer_global_exit">
		<onentry>
			<log expr="'Reached Final global exit state for application. Session will terminate now.'" />
		</onentry>
	</final>	
</scxml>
