<?xml version="1.0" encoding="utf-8"?>
<scxml version="1.0" xmlns="http://www.w3.org/2005/07/scxml" 
		xmlns:xi="http://www.w3.org/2001/XInclude"
		xmlns:ws="http://www.genesyslab.com/modules/ws"
		xmlns:queue="http://www.genesyslab.com/modules/queue"
		xmlns:dialog="http://www.genesyslab.com/modules/dialog"
		xmlns:session="http://www.genesyslab.com/modules/session"
		xmlns:ixn="http://www.genesyslab.com/modules/interaction"
		xmlns:classification="http://www.genesyslab.com/modules/classification"
		initial='_composer_noboot'
		profile="ecmascript"
		name="Main3">

	<!-- SCXML code generated by Composer 8.1.541.07 -->
	<!-- Diagram created/upgraded by Composer: Composer 8.1.541.07 -->
	<!-- Project version: 8.1.541.07 -->
	<!-- Diagram version: 1.0 CreatedOn:  -->
	<!-- Application Author:  -->
	<!-- Release Mode: false -->
	<!-- Use external events: true -->

	<final id="_composer_noboot">
		<onentry>
			<log expr="'This SCXML page cannot be executed as the first page of an application. The first page should always be the SCXML page generated from an Interaction Process Diagram (IPD).'" />
		</onentry>
	</final>
	<state id="_composer_entry" initial="$$_MY_PREFIX_$$.Entry1">
		<onentry>
			<log expr="'Running Main3 workflow.'"/>
			<log expr="'Code Generated by Composer: 8.1.541.07.'"/>
			<log expr="'Diagram created/upgraded by Composer: Composer 8.1.541.07.'"/>
			<log expr="'Project version: 8.1.541.07.'"/>
			<log expr="'Diagram version: 1.0 CreatedOn: .'"/>
			<script>
				// have this diagram system context sharing the global system context.
				// values from parent context (IPD or calling workflow) are used.
				// also IPD system handlers will update _data.system.context and hence this diagram system variables.
				var system = _data.system.context;

				// declare variables for all blocks in the diagram.
				// actual initialization is done in the entry block so expression evaluation exceptions can be caught.
				// there must be NO error in this part. all variables have to be declared before any error is raised so we can safely execute any error branch in the application.
				var App_Entry1 = new Object();
				var varDestination = undefined;
				var App_Exit1 = new Object();
				var App_BeginParallel1 = new Object();
				var App_EndParallel1 = new Object();
				var App_psRingback = new Object();
				var App_ForceRoute1 = new Object();
				var App_emsMapToLGDN = new Object();
			</script>
		</onentry>
		
			
		<!-- This is the Entry1 State -->
		<state id="Entry1">
			<onentry>
				<log expr="_sessionid + ': Inside Entry Block: Entry1'"/>
				<script>
					// update the system and user variables with values set by the user in the variables dialog
					system.diagram = 'Main3';
					system.BaseURL = getBaseURL();
					system.RelativePathURL = getRelativePathURL();
					system.Language = 'en-US';
					system.LastErrorEvent = 'undefined';
					system.LastErrorEventName = 'undefined';
					system.LastErrorDescription = 'undefined';
					system.WebServiceStubbing = '0';
					system.TerminateIxnOnExit = 1;
					system.LastTargetComponentSelected = 'undefined';
					system.LastTargetObjectSelected = 'undefined';
					system.LastTargetSelected = 'undefined';
					system.LastVirtualQueueSelected = 'undefined';
					system.LastSubmitRequestId = 'undefined';
					system.OPM = getOPMParameters();
					system.OCS_RecordURI = getWorkflowRecordURI();
					system.OCS_URI = getWorkflowOCSURI();
					system.OCS_Record = getWorkflowOCSRecord();
					varDestination = undefined;
				</script>
				<log expr="'RelativePathURL = ' + system.RelativePathURL" />
				<send event="'Entry1.done'">
    	<param name="resolveid" expr="_my_prefix"/>
    	</send>
			</onentry>
			<transition event="Entry1.done" cond="_event.data.resolveid == _my_prefix" target="$$_MY_PREFIX_$$.emsMapToLGDN">
				<script>storeEvent("Entry1", _event);</script>
			</transition>
		</state>

		<!-- This is the Exit1 State -->
		
		<state id="Exit1">
		
			<onentry>
			</onentry>
			<transition cond="(typeof system.InteractionID != 'undefined')
						&amp;&amp; (_genesys.ixn.interactions[system.InteractionID] != null)
						&amp;&amp; (typeof _genesys.ixn.interactions[system.InteractionID] != 'undefined')
						&amp;&amp; (typeof _genesys.ixn.interactions[system.InteractionID].voice == 'undefined')
						&amp;&amp; (system.TerminateIxnOnExit == '1' || system.TerminateIxnOnExit == 1)"  target="$$_MY_PREFIX_$$._reserved_Exit1_stop_ixn"/>
			<transition target="$$_MY_PREFIX_$$._reserved_Exit1_final"/>
		</state>
		<state id="_reserved_Exit1_stop_ixn">
			<onentry>
				<ixn:terminate requestid="App_Exit1['requestid']" interactionid="system.InteractionID" reason="'Auto-stop interaction'"/>
			</onentry>
			<transition event="interaction.terminate.done" cond="_event.data.requestid==App_Exit1['requestid']" target="$$_MY_PREFIX_$$._reserved_Exit1_final"/>
			<transition event="error.interaction.terminate" cond="_event.data.requestid==App_Exit1['requestid']" target="$$_MY_PREFIX_$$._reserved_Exit1_final"/>
		</state>
		<final id="_reserved_Exit1_final">
			<onentry>
				<log expr="_sessionid + ': Reached final in Exit Block: _reserved_Exit1_final. End of this session'" />
			</onentry>
		</final>

		<!-- This is the BeginParallel1 State -->
		<state id="BeginParallel1" initial="$$_MY_PREFIX_$$._reserved_BeginParallel1_parallel">
			<onentry>
				<!-- optional executable content to be run upon entering this state -->
			</onentry>
			<onexit>
				<!-- optional executable content to be run upon exiting this state -->
			</onexit>
			<parallel id="_reserved_BeginParallel1_parallel">
				<onentry>
					<script>
						App_BeginParallel1['running'] = 2;
						App_BeginParallel1['parallel-id'] = Math.random();
					</script>
				</onentry>
			<state id="_reserved_BeginParallel1_1" initial="$$_MY_PREFIX_$$.psRingback">
				<onentry>
					<log expr="_sessionid + ': BeginParallel1: Begin of a parallel thread #1'"/>
				</onentry>
				
	
		<!-- This is the psRingback State -->
		<state id="psRingback">
			<onentry>
				<dialog:playsound interactionid="system.InteractionID" requestid="App_psRingback['requestid']" type="'ringback'" duration="60" />
			</onentry>
			<transition event="dialog.playsound.done" cond="_event.data.requestid==App_psRingback['requestid']" target="$$_MY_PREFIX_$$._reserved_BeginParallel1_1_end">
				<script>storeEvent("psRingback", _event);</script>
			</transition>
		</state>
		
	

				<final id="_reserved_BeginParallel1_1_end">
					<onentry>
						<script>App_BeginParallel1['running']--;</script>
						<log expr="_sessionid + ': BeginParallel1: End of a parallel thread #1, ' + App_BeginParallel1['running'] + ' thread(s) still running'"/>
					</onentry>
				</final>
			</state>
			<state id="_reserved_BeginParallel1_2" initial="$$_MY_PREFIX_$$.ForceRoute1">
				<onentry>
					<log expr="_sessionid + ': BeginParallel1: Begin of a parallel thread #2'"/>
				</onentry>
				
		<!-- This is the ForceRoute1 State -->
		<state id="ForceRoute1">
			<initial>
				<transition target="$$_MY_PREFIX_$$._reserved_ForceRoute1_redirect">
					<log expr="'Inside ForceRoute Block: ForceRoute1 '"/>
				</transition>
			</initial>
			<state id="_reserved_ForceRoute1_redirect">
				<onentry>
					<ixn:redirect detach="true" requestid="App_ForceRoute1['requestid']" interactionid="system.InteractionID" from="system.ThisDN" to="varDestination" type="_genesys.queue.rType.RouteTypeDefault"/>
				</onentry>
			<transition event="interaction.redirect.done" cond="_event.data.requestid==App_ForceRoute1['requestid']" target="$$_MY_PREFIX_$$._reserved_BeginParallel1_2_end">
				<script>storeEvent("ForceRoute1", _event);</script>
				<assign location="App_ForceRoute1['interaction.redirect.requestid']" expr="_event.data.requestid"/>
			</transition>
			</state>
		</state>

				<final id="_reserved_BeginParallel1_2_end">
					<onentry>
						<script>App_BeginParallel1['running']--;</script>
						<log expr="_sessionid + ': BeginParallel1: End of a parallel thread #2, ' + App_BeginParallel1['running'] + ' thread(s) still running'"/>
					</onentry>
				</final>
			</state>
			<transition event="done.state.$$_MY_PREFIX_$$._reserved_BeginParallel1_parallel" target="$$_MY_PREFIX_$$.Exit1">
				<script>storeEvent("BeginParallel1", _event);</script>
				<log expr="_sessionid + ': BeginParallel1: End of parallel BeginParallel1'"/>
			</transition>
			
			<onexit>
			</onexit>
			</parallel>
		</state>

		<!-- This is the emsMapToLGDN State -->
		<state id="emsMapToLGDN">
			<onentry>
				<log expr="_sessionid + ': Inside Script Block: emsMapToLGDN'"/>
				<script>
					try {
						// your code
						
						var contactdn = _genesys.session.getListItemValue('LG_ROUTING_TABLE', system.ThisDN, '');
						if (contactdn !== 'undefined'){
							var destdn = getJSONContent(contactdn, 'destination-dn');
							var prefix = getJSONContent(contactdn, 'prefix');
							
							varDestination = prefix + destdn;
						} else {
							varDestination = '9981770';
						}
					//	return;
						
					/* 	if (system.ThisDN === '4201') {
							varDestination = '9981770';
						} else if (system.ThisDN === '4202') {
							varDestination = '9981135';
						} else if (system.ThisDN === '4203') {
							varDestination = '9981311';
						} else if (system.ThisDN === '4204') {
							varDestination = '9981341';
						} else if (system.ThisDN === '4205') {
							varDestination = '9981475';
						} else if (system.ThisDN === '4206') {
							varDestination = '9982036';
						} else {
							varDestination = '9981770';
						} */
					} catch (error) {
						// error handling code
						varDestination = '9981770';
					}
				</script>
				<send event="'emsMapToLGDN.script.done'">
    	<param name="resolveid" expr="_my_prefix"/>
    	</send>
			</onentry>
			<transition event="emsMapToLGDN.script.done" cond="_event.data.resolveid== _my_prefix" target="$$_MY_PREFIX_$$.BeginParallel1">
				<script>storeEvent("emsMapToLGDN", _event);</script>
			</transition>
		</state>
	</state>
	
</scxml>
